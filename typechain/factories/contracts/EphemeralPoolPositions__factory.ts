/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EphemeralPoolPositions,
  EphemeralPoolPositionsInterface,
  PoolUtils,
} from "../../contracts/EphemeralPoolPositions";

const _abi = [
  {
    inputs: [
      {
        internalType: "V3PoolCallee",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
        ],
        internalType: "struct PoolUtils.PositionKey[]",
        name: "keys",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "V3PoolCallee",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
        ],
        internalType: "struct PoolUtils.PositionKey[]",
        name: "keys",
        type: "tuple[]",
      },
    ],
    name: "getPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "slot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "data",
            type: "uint256",
          },
        ],
        internalType: "struct PoolUtils.Slot[]",
        name: "slots",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040516104e63803806104e683398101604081905261002291610373565b600061002e838361005c565b90506000816040516020016100439190610480565b6040516020818303038152906040529050805160208201fd5b8051606090600790600281901b6001600160401b03811115610080576100806102ee565b6040519080825280602002602001820160405280156100c557816020015b604080518082019091526000808252602082015281526020019060019003908161009e5790505b5092506000805b828110156102475760006100fe8783815181106100eb576100eb6104cf565b602002602001015161025160201b60201c565b60008181526020879052604081209192506101226001600160a01b038b168461026d565b6040805180820190915283815281516001600160801b03166020820152895160018881019895019492935090918a91811061015f5761015f6104cf565b6020026020010181905250604051806040016040528083806001019450815260200182602001518152508886806001019750815181106101a1576101a16104cf565b6020026020010181905250604051806040016040528083806001019450815260200182604001518152508886806001019750815181106101e3576101e36104cf565b602002602001018190525060006060820151608083015160801b17905060405180604001604052808481526020018281525089878060010198508151811061022d5761022d6104cf565b6020026020010181905250505050508060010190506100cc565b5050505092915050565b6040810151600652602081015160035251600052601a600c2090565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152806102ae8463514ea4bf60e01b858460a06102b5565b5092915050565b8360005282600452808260246000885afa6102cf57600080fd5b5050505050565b6001600160a01b03811681146102eb57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715610326576103266102ee565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610354576103546102ee565b604052919050565b8051600281900b811461036e57600080fd5b919050565b6000806040838503121561038657600080fd5b8251610391816102d6565b60208401519092506001600160401b038111156103ad57600080fd5b8301601f810185136103be57600080fd5b80516001600160401b038111156103d7576103d76102ee565b6103e660208260051b0161032c565b8082825260208201915060206060840285010192508783111561040857600080fd5b6020840193505b82841015610472576060848903121561042757600080fd5b61042f610304565b845161043a816102d6565b81526104486020860161035c565b60208201526104596040860161035c565b604082015282526060939093019260209091019061040f565b809450505050509250929050565b602080825282518282018190526000918401906040840190835b818110156104c457835180518452602090810151818501529093019260409092019160010161049a565b509095945050505050565b634e487b7160e01b600052603260045260246000fdfe";

type EphemeralPoolPositionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EphemeralPoolPositionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EphemeralPoolPositions__factory extends ContractFactory {
  constructor(...args: EphemeralPoolPositionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    pool: string,
    keys: PoolUtils.PositionKeyStruct[],
    overrides?: PayableOverrides & { from?: string }
  ): Promise<EphemeralPoolPositions> {
    return super.deploy(
      pool,
      keys,
      overrides || {}
    ) as Promise<EphemeralPoolPositions>;
  }
  override getDeployTransaction(
    pool: string,
    keys: PoolUtils.PositionKeyStruct[],
    overrides?: PayableOverrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(pool, keys, overrides || {});
  }
  override attach(address: string): EphemeralPoolPositions {
    return super.attach(address) as EphemeralPoolPositions;
  }
  override connect(signer: Signer): EphemeralPoolPositions__factory {
    return super.connect(signer) as EphemeralPoolPositions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EphemeralPoolPositionsInterface {
    return new utils.Interface(_abi) as EphemeralPoolPositionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EphemeralPoolPositions {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EphemeralPoolPositions;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EphemeralAllPositionsByOwner,
  EphemeralAllPositionsByOwnerInterface,
} from "../../contracts/EphemeralAllPositionsByOwner";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3NonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV3NonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "allPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint96",
                name: "nonce",
                type: "uint96",
              },
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
              {
                internalType: "int24",
                name: "tickLower",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "tokensOwed0",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "tokensOwed1",
                type: "uint128",
              },
            ],
            internalType: "struct PositionFull",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "sqrtPriceX96",
                type: "uint160",
              },
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint16",
                name: "observationIndex",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinality",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinalityNext",
                type: "uint16",
              },
              {
                internalType: "uint32",
                name: "feeProtocol",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "unlocked",
                type: "bool",
              },
            ],
            internalType: "struct Slot0",
            name: "slot0",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "activeLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "decimals0",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals1",
            type: "uint8",
          },
        ],
        internalType: "struct PositionState[]",
        name: "positions",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052604051610a80380380610a80833981016040819052610022916107cc565b600061002e838361005c565b90506000816040516020016100439190610874565b6040516020818303038152906040529050805160208201fd5b6060600061006a8484610210565b9050806001600160401b0381111561008457610084610a09565b60405190808252806020026020018201604052801561018457816020015b6101716040805160e0808201835260008083526020808401829052845161018081018652828152908101829052808501829052606081018290526080810182905260a0810182905260c08101829052918201819052610100820181905261012082018190526101408201819052610160820152909182019081526040805160e08101825260008082526020828101829052928201819052606082018190526080820181905260a0820181905260c082015291019081526000602082018190526040820181905260609091015290565b8152602001906001900390816100a25790505b50915060005b8181101561020857600061019f86868461022d565b905060008483815181106101b5576101b5610a1f565b602002602001015190508581602001906001600160a01b031690816001600160a01b0316815250506101f28783836040015161024c60201b60201c565b506101fe878383610272565b505060010161018a565b505092915050565b600081610225846370a0823160e01b83610437565b949350505050565b60008261024385632f745c5960e01b8386610465565b95945050505050565b63133f757160e31b600081815260048490529061018083602484885afa95945050505050565b818152604081015160006102858561049e565b604080840151606085015160808601519251630b4c774160e11b81526001600160a01b039283166004820152908216602482015262ffffff90921660448301529190911690631698ee8290606401602060405180830381865afa1580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103149190610a35565b90506103286001600160a01b0382166104b9565b6001600160801b0316608084015260608301516103469082906104cd565b60e08201516001600160801b0316156103ef5760008061037e838560a001518660c001518860600151602001516104f360201b60201c565b915091506000806103a68660e0015185858961010001518a61012001516105ce60201b60201c565b915091508186610140018181516103bd9190610a52565b6001600160801b0316905250610160860180518291906103de908390610a52565b6001600160801b0316905250505050505b6040820151610406906001600160a01b0316610613565b60ff1660a08401526060820151610425906001600160a01b0316610613565b60ff1660c09093019290925250505050565b600082600052816004526020600060246000875afa61045a573d6000803e3d6000fd5b505060005192915050565b60008360005282600452816024526020600060446000885afa61048c573d6000803e3d6000fd5b60005190506000602452949350505050565b6000806104b28363c45a015560e01b610639565b9392505050565b6000806104b283630d34328160e11b610639565b633850c7bd60e01b600081815260e0908390600490865afa6104ee57600080fd5b505050565b6000808061050a6001600160a01b0388168761065d565b905060006105216001600160a01b0389168761065d565b90508660020b8560020b12156105505780604001518260400151039350806060015182606001510392506105c3565b8560020b8560020b1261057c5781604001518160400151039350816060015181606001510392506105c3565b604080820151908301516105986001600160a01b038b166106ba565b03039350806060015182606001516105be8a6001600160a01b03166106d360201b60201c565b030392505b505094509492505050565b6000806105eb6001600160801b038816858803600160801b6106e6565b91506106076001600160801b038816848703600160801b6106e6565b90509550959350505050565b6012600090815263313ce56760e01b602081815280600481865afa60051b519392505050565b6000816000526020600060046000865afa61065357600080fd5b5050600051919050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152600282900b816102088563f30dba9360e01b84846101006106f3565b60006106cd8263f305839960e01b610639565b92915050565b60006106cd82634614131960e01b610639565b6000610225848484610714565b8360005282600452808260246000885afa61070d57600080fd5b5050505050565b8282026000198385098181108201900380610745578261073c5763ae47f7026000526004601cfd5b508190046104b2565b80831161075a5763ae47f7026000526004601cfd5b82848609600084810385169485900494848311909303908390038390046001010292030417600260038302811880840282030280840282030280840282030280840282030280840282030280840290910302029392505050565b6001600160a01b03811681146107c957600080fd5b50565b600080604083850312156107df57600080fd5b82516107ea816107b4565b60208401519092506107fb816107b4565b809150509250929050565b60018060a01b038151168252602081015160020b602083015261ffff604082015116604083015261ffff606082015116606083015261ffff608082015116608083015260a081015161086060a084018263ffffffff169052565b5060c08101516104ee60c084018215159052565b602080825282518282018190526000918401906040840190835b818110156109fe5783518051845260018060a01b03602082015116602085015260408101516108c96040860182516001600160601b03169052565b60208101516001600160a01b03811660608701525060408101516001600160a01b03811660808701525060608101516001600160a01b03811660a087015250608081015162ffffff811660c08701525060a081015161092d60e087018260020b9052565b5060c081015161094361010087018260020b9052565b5060e08101516001600160801b0381166101208701525061010081015161014086015261012081015161016086015261014081015161098e6101808701826001600160801b03169052565b5061016001516001600160801b03166101a085015260608101516109b66101c0860182610806565b5060808101516001600160801b03166102a085015260a081015160ff9081166102c086015260c090910151166102e0840152602093909301926103009092019160010161088e565b509095945050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a4757600080fd5b81516104b2816107b4565b6001600160801b0381811683821601908111156106cd57634e487b7160e01b600052601160045260246000fdfe";

type EphemeralAllPositionsByOwnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EphemeralAllPositionsByOwnerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EphemeralAllPositionsByOwner__factory extends ContractFactory {
  constructor(...args: EphemeralAllPositionsByOwnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    owner: string,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<EphemeralAllPositionsByOwner> {
    return super.deploy(
      npm,
      owner,
      overrides || {}
    ) as Promise<EphemeralAllPositionsByOwner>;
  }
  override getDeployTransaction(
    npm: string,
    owner: string,
    overrides?: PayableOverrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(npm, owner, overrides || {});
  }
  override attach(address: string): EphemeralAllPositionsByOwner {
    return super.attach(address) as EphemeralAllPositionsByOwner;
  }
  override connect(signer: Signer): EphemeralAllPositionsByOwner__factory {
    return super.connect(signer) as EphemeralAllPositionsByOwner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EphemeralAllPositionsByOwnerInterface {
    return new utils.Interface(_abi) as EphemeralAllPositionsByOwnerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EphemeralAllPositionsByOwner {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EphemeralAllPositionsByOwner;
  }
}

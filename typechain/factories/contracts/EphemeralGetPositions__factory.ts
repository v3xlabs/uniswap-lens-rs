/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EphemeralGetPositions,
  EphemeralGetPositionsInterface,
} from "../../contracts/EphemeralGetPositions";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3NonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV3NonfungiblePositionManager",
        name: "npm",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "getPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint96",
                name: "nonce",
                type: "uint96",
              },
              {
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                internalType: "address",
                name: "token0",
                type: "address",
              },
              {
                internalType: "address",
                name: "token1",
                type: "address",
              },
              {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
              },
              {
                internalType: "int24",
                name: "tickLower",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
              },
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside0LastX128",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeGrowthInside1LastX128",
                type: "uint256",
              },
              {
                internalType: "uint128",
                name: "tokensOwed0",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "tokensOwed1",
                type: "uint128",
              },
            ],
            internalType: "struct PositionFull",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint160",
                name: "sqrtPriceX96",
                type: "uint160",
              },
              {
                internalType: "int24",
                name: "tick",
                type: "int24",
              },
              {
                internalType: "uint16",
                name: "observationIndex",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinality",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "observationCardinalityNext",
                type: "uint16",
              },
              {
                internalType: "uint32",
                name: "feeProtocol",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "unlocked",
                type: "bool",
              },
            ],
            internalType: "struct Slot0",
            name: "slot0",
            type: "tuple",
          },
          {
            internalType: "uint128",
            name: "activeLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "decimals0",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals1",
            type: "uint8",
          },
        ],
        internalType: "struct PositionState[]",
        name: "positions",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052604051610ae3380380610ae38339810160408190526100229161079d565b600061002e838361005c565b905060008160405160200161004391906108ed565b6040516020818303038152906040529050805160208201fd5b8051606090806001600160401b0381111561007957610079610787565b60405190808252806020026020018201604052801561017957816020015b6101666040805160e0808201835260008083526020808401829052845161018081018652828152908101829052808501829052606081018290526080810182905260a0810182905260c08101829052918201819052610100820181905261012082018190526101408201819052610160820152909182019081526040805160e08101825260008082526020828101829052928201819052606082018190526080820181905260a0820181905260c082015291019081526000602082018190526040820181905260609091015290565b8152602001906001900390816100975790505b5091506000805b8281101561021157600085828151811061019c5761019c610a82565b6020026020010151905060008584815181106101ba576101ba610a82565b602002602001015190506101d98883836040015161021b60201b60201c565b15610207576001909301926101ee8883610241565b6001600160a01b0316602082015261020788838361025e565b5050600101610180565b5082525092915050565b63133f757160e31b600081815260048490529061018083602484885afa95945050505050565b600080610256846331a9108f60e11b85610423565b949350505050565b8181526040810151600061027185610451565b604080840151606085015160808601519251630b4c774160e11b81526001600160a01b039283166004820152908216602482015262ffffff90921660448301529190911690631698ee8290606401602060405180830381865afa1580156102dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103009190610a98565b90506103146001600160a01b03821661046c565b6001600160801b031660808401526060830151610332908290610480565b60e08201516001600160801b0316156103db5760008061036a838560a001518660c001518860600151602001516104a660201b60201c565b915091506000806103928660e0015185858961010001518a610120015161058160201b60201c565b915091508186610140018181516103a99190610ab5565b6001600160801b0316905250610160860180518291906103ca908390610ab5565b6001600160801b0316905250505050505b60408201516103f2906001600160a01b03166105c6565b60ff1660a08401526060820151610411906001600160a01b03166105c6565b60ff1660c09093019290925250505050565b600082600052816004526020600060246000875afa610446573d6000803e3d6000fd5b505060005192915050565b6000806104658363c45a015560e01b6105ec565b9392505050565b60008061046583630d34328160e11b6105ec565b633850c7bd60e01b600081815260e0908390600490865afa6104a157600080fd5b505050565b600080806104bd6001600160a01b03881687610610565b905060006104d46001600160a01b03891687610610565b90508660020b8560020b1215610503578060400151826040015103935080606001518260600151039250610576565b8560020b8560020b1261052f578160400151816040015103935081606001518160600151039250610576565b6040808201519083015161054b6001600160a01b038b16610675565b03039350806060015182606001516105718a6001600160a01b031661068e60201b60201c565b030392505b505094509492505050565b60008061059e6001600160801b038816858803600160801b6106a1565b91506105ba6001600160801b038816848703600160801b6106a1565b90509550959350505050565b6012600090815263313ce56760e01b602081815280600481865afa60051b519392505050565b6000816000526020600060046000865afa61060657600080fd5b5050600051919050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152600282900b8161066d8563f30dba9360e01b84846101006106ae565b505092915050565b60006106888263f305839960e01b6105ec565b92915050565b600061068882634614131960e01b6105ec565b60006102568484846106cf565b8360005282600452808260246000885afa6106c857600080fd5b5050505050565b828202600019838509818110820190038061070057826106f75763ae47f7026000526004601cfd5b50819004610465565b8083116107155763ae47f7026000526004601cfd5b82848609600084810385169485900494848311909303908390038390046001010292030417600260038302811880840282030280840282030280840282030280840282030280840282030280840290910302029392505050565b6001600160a01b038116811461078457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156107b057600080fd5b82516107bb8161076f565b60208401519092506001600160401b038111156107d757600080fd5b8301601f810185136107e857600080fd5b80516001600160401b0381111561080157610801610787565b604051600582901b90603f8201601f191681016001600160401b038111828210171561082f5761082f610787565b60405291825260208184018101929081018884111561084d57600080fd5b6020850194505b8385101561087057845180825260209586019590935001610854565b50809450505050509250929050565b60018060a01b038151168252602081015160020b602083015261ffff604082015116604083015261ffff606082015116606083015261ffff608082015116608083015260a08101516108d960a084018263ffffffff169052565b5060c08101516104a160c084018215159052565b602080825282518282018190526000918401906040840190835b81811015610a775783518051845260018060a01b03602082015116602085015260408101516109426040860182516001600160601b03169052565b60208101516001600160a01b03811660608701525060408101516001600160a01b03811660808701525060608101516001600160a01b03811660a087015250608081015162ffffff811660c08701525060a08101516109a660e087018260020b9052565b5060c08101516109bc61010087018260020b9052565b5060e08101516001600160801b03811661012087015250610100810151610140860152610120810151610160860152610140810151610a076101808701826001600160801b03169052565b5061016001516001600160801b03166101a08501526060810151610a2f6101c086018261087f565b5060808101516001600160801b03166102a085015260a081015160ff9081166102c086015260c090910151166102e08401526020939093019261030090920191600101610907565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610aaa57600080fd5b81516104658161076f565b6001600160801b03818116838216019081111561068857634e487b7160e01b600052601160045260246000fdfe";

type EphemeralGetPositionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EphemeralGetPositionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EphemeralGetPositions__factory extends ContractFactory {
  constructor(...args: EphemeralGetPositionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    npm: string,
    tokenIds: BigNumberish[],
    overrides?: PayableOverrides & { from?: string }
  ): Promise<EphemeralGetPositions> {
    return super.deploy(
      npm,
      tokenIds,
      overrides || {}
    ) as Promise<EphemeralGetPositions>;
  }
  override getDeployTransaction(
    npm: string,
    tokenIds: BigNumberish[],
    overrides?: PayableOverrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(npm, tokenIds, overrides || {});
  }
  override attach(address: string): EphemeralGetPositions {
    return super.attach(address) as EphemeralGetPositions;
  }
  override connect(signer: Signer): EphemeralGetPositions__factory {
    return super.connect(signer) as EphemeralGetPositions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EphemeralGetPositionsInterface {
    return new utils.Interface(_abi) as EphemeralGetPositionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EphemeralGetPositions {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EphemeralGetPositions;
  }
}
